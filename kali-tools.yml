---
# Playbook for Kali

# Deploy additional tools
- hosts: all
  become: true
  tasks:
    - name: Install Burp Suite
      ansible.builtin.include_role:
        name: iesplin.burp_suite

    - name: Update burpsuite custom facts
      ansible.builtin.blockinfile:
        path: /etc/ansible/facts.d/burpsuite.fact
        marker: "# {mark} ANSIBLE MANAGED BLOCK - {{ burpsuite_user }}"
        block: |
          [{{ burpsuite_user }}]
          edition={{ burpsuite_edition }}
          licensed=True
      when:
        - burpsuite_edition == "pro"
        - burpsuite_activate

    - name: Install Visual Studio Code
      ansible.builtin.include_role:
        name: iesplin.vscode

    # Clone git repos
    - name: Clone git repositories
      ansible.builtin.git:
        repo: "{{ item.repo }}"
        dest: "/opt/{{ item.name }}"
        #version: "{{ item.version | default('master') }}"
        depth: 1
        force: true
      with_items: 
       - "{{ git_repos | flatten(levels=1) }}"
       - "{{ python_tools }}" 
      tags: go_build

    # Miscellaneous tools
    - name: Ensure destination directory exists
      ansible.builtin.file:
        dest: "{{ item.dest | dirname }}"
        state: directory
        owner: root
        group: root
        mode: 0755
      with_items: 
        - "{{ misc_downloads}}"
        - "{{ tar_packages}}"
        - "{{ python_tools }}"
      tags: install_tar_packages

    - name: Download files
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: "{{ item.mode | default('0644') }}"
      with_items: 
        - "{{ misc_downloads}}"
  
    # Go Build packages
    - name: Build Go packages
      ansible.builtin.command:
        chdir: "/opt/{{item}}"  
        cmd: "/usr/bin/go build -o /usr/local/bin /opt/{{item}} " 
      register: go_build_cmd
      #changed_when: go_build_cmd.stderr | regex_search('/pkg/tool/linux_.*/buildid')
      loop: "{{ go_build_packages }}"
      tags: go_build

      #Install Tar Packages 
    - name: Install Tar packages
      ansible.builtin.unarchive:
        src: "{{item.url}}"
        dest: "{{item.dest}}"
        extra_opts: [--strip-components=1]
        remote_src: true
        mode: "{{item.mode | default('0644')}}"
      loop: "{{ tar_packages }}"
      tags: install_tar_packages 

      #Install Python Tools 
    - name: Install requirements in virtual environment for each tool 
      ansible.builtin.pip:
         requirements:   "{{item.dest}}/requirements.txt"  
         virtualenv: "{{kali_user_details.home}}/.pyenv/versions/{{item.python_version}}/envs/{{item.name}}"
      loop: "{{ python_tools }}"
      tags: install_python_tools 
     
    # change the main script of the tool to launch in its virtualenv
    - name:  
      ansible.builtin.replace:
        path: "{{item.dest}}/{{item.main_file}}"
        regexp: "#!/usr/bin/env python" 
        replace: "#!{{kali_user_details.home}}/.pyenv/versions/{{item.python_version}}/envs/{{item.name}}/bin/python" 
      with_items:
         - "{{python_tools}}"
      tags: install_python_tools   

    - name:  
      ansible.builtin.replace:
        path: "{{item.dest}}/{{item.main_file}}"
        regexp: "#!/usr/bin/env python" 
        replace: "#!{{kali_user_details.home}}/.pyenv/versions/{{item.python_version}}/envs/{{item.name}}/bin/python" 
      with_items:
         - "{{python_tools}}"
      tags: install_python_tools    
    
    # make the main script executable 
    - name: make the main file executable 
      ansible.builtin.file:
        path: "{{item.dest}}{{item.main_file}}"
        mode: "0755"
      with_items:
         - "{{python_tools}}"
      tags:
       - install_python_tools

    # Create Symlinks
    - name: Create Symlinks for python tools
      ansible.builtin.file: 
        src: "{{item.dest}}{{item.main_file}}"
        force: true
        dest: "/usr/local/bin/{{ item.name }}"
        state: link 
      with_items:
         - "{{python_tools}}"
      tags: install_python_tools 

    # Create Symlinks
    - name: Create Symlinks for tar_packages
      ansible.builtin.file: 
        src: "{{item.dest}}{{item.bin_path}}"
        force: true
        dest: "/usr/local/bin/{{ item.command }}"
        state: link 
      with_items:
         - "{{tar_packages}}"
      tags: install_tar_packages 
