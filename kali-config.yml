---
# Playbook for Kali

# Configure Kali
- hosts: all
  become: true
  tasks:
    # Packages required for tasks
    - name: Ensure packages installed for config tasks
      ansible.builtin.apt:
        name:
          - apparmor
          - firefox-esr
          - metasploit-framework
          - postgresql
          - ufw
        state: present
      register: apt_config_packages
      until: apt_config_packages is success
      retries: 1
      delay: 10

    # UFW
    - name: Block inbound traffic by default
      community.general.ufw:
        state: enabled
        direction: incoming
        default: reject

    - name: Copy application profiles
      ansible.builtin.copy:
        src: "ufw/applications.d/{{ item }}"
        dest: "/etc/ufw/applications.d/{{ item }}"
        owner: root
        group: root
        mode: "0644"
      loop: "{{ ufw_application_profiles }}"

    - name: Enable UFW
      ansible.builtin.systemd:
        name: ufw.service
        state: started
        enabled: true

    # AppArmor
    - name: Enable AppArmor
      ansible.builtin.systemd:
        name: apparmor.service
        state: started
        enabled: true
      tags:
        - molecule-notest

    # Disable automatic updates
    - name: Disable apt systemd timers
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        enabled: false
      loop:
        - apt-daily.timer
        - apt-daily-upgrade.timer

    - name: Prevent apt services from running
      ansible.builtin.systemd:
        name: "{{ item }}"
        masked: true
      loop:
        - apt-daily.service
        - apt-daily-upgrade.service

    - name: Disable apt periodic updates
      ansible.builtin.template:
        src: templates/apt/10periodic.j2
        dest: /etc/apt/apt.conf.d/10periodic
        owner: root
        group: root
        mode: 0644

    # Metasploit
    - name: Enable Postgresql service
      ansible.builtin.systemd:
        name: postgresql.service
        state: started
        enabled: true

    - name: Initialize msfdb
      ansible.builtin.command:
        cmd: msfdb init
      register: msfdb_init_cmd
      changed_when: '"Creating initial database schema" in msfdb_init_cmd.stdout'

    # Firefox ESR
    - name: Deploy Firefox ESR policy
      ansible.builtin.template:
        src: templates/firefox/policies.json.j2
        dest: /usr/share/firefox-esr/distribution/policies.json
        owner: root
        group: root
        mode: 0644

    # Resolvconf for WireGuard
    # https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=939904
    # - name: Symlink resolvconf to resolvectl
    #   ansible.builtin.file:
    #     src: /usr/bin/resolvectl
    #     dest: /usr/local/bin/resolvconf
    #     state: link

    # - name: Enable systemd-resolved.service
    #   ansible.builtin.systemd:
    #     name: systemd-resolved.service
    #     state: started
    #     enabled: true
